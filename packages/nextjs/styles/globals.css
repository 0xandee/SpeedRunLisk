@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

:root,
[data-theme] {
  background: oklch(var(--b2));
}

body {
  min-height: 100vh;
}

h1,
h2,
h3,
h4 {
  margin-bottom: 0.5rem;
  line-height: 1;
}

p {
  margin: 1rem 0;
}

.btn {
  @apply shadow-md;
}

.btn.btn-ghost {
  @apply shadow-none;
}

.btn.btn-lg {
  @apply px-6 py-2 text-lg font-medium min-h-0 h-[3.25rem];
}

/* Markdown Formatting */
.prose h1,
.prose h2,
.prose h3,
.prose h4,
.prose h5,
.prose h6 {
  @apply break-words overflow-wrap-anywhere;
}

.prose img {
  @apply max-w-full h-auto my-4 mx-auto rounded-lg;
}

/* Enhanced Code Block Styling */
.prose pre {
  @apply overflow-x-auto bg-base-100 text-base-content text-[10px] sm:text-xs md:text-sm !p-4 !border !border-base-300 !rounded-lg;
  font-family: "SF Mono", "Monaco", "Inconsolata", "Roboto Mono", "Source Code Pro", monospace;
  line-height: 1.5;
}

.prose code {
  @apply bg-base-200 text-primary px-1 py-0.5 rounded text-[10px] sm:text-xs md:text-sm;
  font-family: "SF Mono", "Monaco", "Inconsolata", "Roboto Mono", "Source Code Pro", monospace;
}

.prose pre code {
  @apply bg-transparent text-base-content p-0;
}

/* Syntax Highlighting Enhancements */
.prose pre[data-theme] {
  @apply border-0;
}

.prose pre[data-language] {
  position: relative;
}

/* Code block title styling */
.prose pre + .code-title {
  @apply text-xs font-medium text-base-content/70 bg-base-200 px-3 py-1 rounded-t-lg border border-b-0 border-base-300;
}

/* Syntax highlighting styles for rehype-pretty-code */
.prose pre > code {
  display: grid;
}

.prose pre > code .line {
  padding: 0 1rem;
  border-left: 2px solid transparent;
}

.prose pre > code .line--highlighted {
  background-color: rgba(59, 130, 246, 0.1);
  border-left-color: #3b82f6;
}

.prose .word--highlighted {
  background-color: rgba(59, 130, 246, 0.2);
  border-radius: 0.25rem;
  padding: 0.125rem 0.25rem;
}

.prose hr {
  @apply my-4 sm:my-7;
}

@layer utilities {
  .overflow-wrap-anywhere {
    overflow-wrap: anywhere;
  }
}

.prose h1 {
  @apply text-lg sm:text-3xl md:text-4xl;
}

.prose h2 {
  @apply text-base sm:text-2xl md:text-3xl;
}

.prose h3 {
  @apply text-sm sm:text-xl md:text-2xl;
}

.prose p,
.prose li,
.prose blockquote,
.prose td,
.prose th,
.prose strong,
.prose em,
.prose ul,
.prose ol,
.prose dl,
.prose figcaption {
  @apply text-xs sm:text-sm md:text-base;
}

.prose a {
  @apply break-words overflow-wrap-anywhere;
  word-break: break-word;
}

/* Remove quotes and normalize font styling from blockquotes */
.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"], [class~="not-prose"] *))::before,
.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"], [class~="not-prose"] *))::after {
  content: none;
}

.prose :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-style: normal;
  font-weight: normal;
}

.flag-selector ul,
.flag-selector #rfs-btn,
.flag-selector ul > div,
.flag-selector input {
  background-color: oklch(var(--s));
  color: oklch(var(--sc));
}
